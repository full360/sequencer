name: Release Gem

on:
  workflow_run:
    workflows: ["CI Test"]
    types: [completed]
    tags:
      - v*

jobs:
  release:
    runs-on: ubuntu-latest

    if: github.event.base_ref == "refs/heads/master"

    steps:
      # Checkout code if release was created
      - uses: actions/checkout@v2

      # Setup ruby if a release was created
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
          bundler-cache: true

      # Publish
      - name: publish gem
        run: |
          mkdir -p $HOME/.gem
          touch $HOME/.gem/credentials
          chmod 0600 $HOME/.gem/credentials
          printf -- "---\n:rubygems_api_key: ${RUBYGEMS_API_KEY}\n" > $HOME/.gem/credentials
          gem build *.gemspec
          gem push *.gem
        env:
          RUBYGEMS_API_KEY: "${{secrets.RUBYGEMS_API_KEY}}"

  docker-jruby:
    needs: release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Extract tag name
        id: tag
        uses: actions/github-script@0.2.0
        with:
          script: |
            return context.payload.ref.replace(/\/refs\/tags\//, '');

      - name: Build JRuby image
        uses: docker/build-push-action@v2
        with:
          file: ./Dockerfile.jruby
          pull: true
          push: true
          tags: |
            full360/sequencer:jruby-latest
            full360/sequencer:${{ steps.tag.outputs.result }}-jruby-latest

  docker-ruby:
    needs: release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Extract tag name
        id: tag
        uses: actions/github-script@0.2.0
        with:
          script: |
            return context.payload.ref.replace(/\/refs\/tags\//, '');

      - name: Build Ruby image
        uses: docker/build-push-action@v2
        with:
          file: ./Dockerfile.ruby
          pull: true
          push: true
          tags: |
            full360/sequencer:ruby-latest
            full360/sequencer:${{ steps.tag.outputs.result }}-ruby-latest
