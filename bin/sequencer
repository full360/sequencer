#!/usr/bin/env ruby

require "full360-sequencer"

config_file = ARGV[0]

# configure global logger
module Sequencer
  Log = Logger.new(STDOUT)
end

def logger
  Sequencer::Log
end

def sequencer_version
  Full360::Sequencer::VERSION
end

begin
  logger.info("sequencer version #{sequencer_version}")
  logger.level = ENV["SEQUENCER_LOG_DEBUG"] ? Logger::DEBUG : Logger::INFO

  if config_file == nil
    logger.error("SEQUENCER_ERROR: YAML file not provided... exiting with error code 1")
    exit 1
  else
    sleep_between_checks = ENV.fetch("SEQUENCER_SLEEP_BETWEEN_CHECKS", 5).to_i

    Full360::Sequencer::Runner.new(sleep_between_checks, logger).tap do |runner|
      runner.config_from_file(config_file)
      runner.run
    end
  end
  logger.info("all steps succeeded... exiting with code 0")
  exit 0
rescue => e
  logger.error("SEQUENCER_ERROR: #{e.message}")
  e.backtrace.each { |r| logger.error(r) }
  logger.error("failure... exiting with code 1")
  exit 1
end
